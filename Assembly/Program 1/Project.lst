Microsoft (R) Macro Assembler Version 14.00.24210.0	    04/16/17 11:05:54
"Assignment 1     (CS271_prog1.asm			     Page 1 - 1


				TITLE Assignment 1     (CS271_prog1.asm)

				; Author: Erin Alltop
				; Email: alltope@oregonstate.edu
				; Course / Project ID: CS271-400 / Program 1                
				; Due Date: 4-15-17
				; Description: Calculates the sum, difference, product, and quotient of numbers entered by the user.

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

				; (insert constant definitions here)

 00000000			.data

 00000000  00000021 [		userName	BYTE	33 DUP(0) ; string for name entered by user
	    00
	   ]
 00000021 45 6C 65 6D 65	intro_1		BYTE	"Elementary Arithmetic by Erin Alltop ", 0
	   6E 74 61 72 79
	   20 41 72 69 74
	   68 6D 65 74 69
	   63 20 62 79 20
	   45 72 69 6E 20
	   41 6C 6C 74 6F
	   70 20 00
 00000047 49 6E 20 74 68	intro_2		BYTE	"In this program, you will enter two numbers and I will display the sum, difference, product, quotient, and remainder of the numbers. ", 0
	   69 73 20 70 72
	   6F 67 72 61 6D
	   2C 20 79 6F 75
	   20 77 69 6C 6C
	   20 65 6E 74 65
	   72 20 74 77 6F
	   20 6E 75 6D 62
	   65 72 73 20 61
	   6E 64 20 49 20
	   77 69 6C 6C 20
	   64 69 73 70 6C
	   61 79 20 74 68
	   65 20 73 75 6D
	   2C 20 64 69 66
	   66 65 72 65 6E
	   63 65 2C 20 70
	   72 6F 64 75 63
	   74 2C 20 71 75
	   6F 74 69 65 6E
	   74 2C 20 61 6E
	   64 20 72 65 6D
	   61 69 6E 64 65
	   72 20 6F 66 20
	   74 68 65 20 6E
	   75 6D 62 65 72
	   73 2E 20 00
 000000CD 50 6C 65 61 73	prompt_1	BYTE	"Please enter your first number: ", 0
	   65 20 65 6E 74
	   65 72 20 79 6F
	   75 72 20 66 69
	   72 73 74 20 6E
	   75 6D 62 65 72
	   3A 20 00
 000000EE 4E 6F 77 20 65	prompt_2	BYTE	"Now enter your second number: ", 0
	   6E 74 65 72 20
	   79 6F 75 72 20
	   73 65 63 6F 6E
	   64 20 6E 75 6D
	   62 65 72 3A 20
	   00
 0000010D 54 68 65 20 73	prompt_3	BYTE	"The second number must be less than the first number! Try that again: ", 0
	   65 63 6F 6E 64
	   20 6E 75 6D 62
	   65 72 20 6D 75
	   73 74 20 62 65
	   20 6C 65 73 73
	   20 74 68 61 6E
	   20 74 68 65 20
	   66 69 72 73 74
	   20 6E 75 6D 62
	   65 72 21 20 54
	   72 79 20 74 68
	   61 74 20 61 67
	   61 69 6E 3A 20
	   00
 00000154 57 6F 75 6C 64	prompt_4	BYTE	"Would you like to play again? Enter 1 for yes or 0 for no: ", 0
	   20 79 6F 75 20
	   6C 69 6B 65 20
	   74 6F 20 70 6C
	   61 79 20 61 67
	   61 69 6E 3F 20
	   45 6E 74 65 72
	   20 31 20 66 6F
	   72 20 79 65 73
	   20 6F 72 20 30
	   20 66 6F 72 20
	   6E 6F 3A 20 00
 00000190 2A 2A 45 43 3A	EC_1		BYTE	"**EC: Program verifies second number less than first. ", 0
	   20 50 72 6F 67
	   72 61 6D 20 76
	   65 72 69 66 69
	   65 73 20 73 65
	   63 6F 6E 64 20
	   6E 75 6D 62 65
	   72 20 6C 65 73
	   73 20 74 68 61
	   6E 20 66 69 72
	   73 74 2E 20 00
 000001C7 2A 2A 45 43 3A	EC_2		BYTE	"**EC: Program loops until user wishes to quit: ", 0
	   20 50 72 6F 67
	   72 61 6D 20 6C
	   6F 6F 70 73 20
	   75 6E 74 69 6C
	   20 75 73 65 72
	   20 77 69 73 68
	   65 73 20 74 6F
	   20 71 75 69 74
	   3A 20 00
 000001F7 00000000		numOne		DWORD	?
 000001FB 00000000		numTwo		DWORD	?
 000001FF 20 2B 20 00		addNum		BYTE	" + ", 0
 00000203 20 2D 20 00		subNum		BYTE	" - ", 0
 00000207 20 3D 20 00		eqNum		BYTE	" = ", 0
 0000020B 20 2F 20 00		divNum		BYTE	" / ", 0
 0000020F 20 78 20 00		mulNum		BYTE	" x ", 0
 00000213 20 72 65 6D 61	remNum		BYTE	" remainder ", 0
	   69 6E 64 65 72
	   20 00
 0000021F 54 68 61 6E 6B	goodbye		BYTE	"Thanks for playing! Goodbye ", 0
	   73 20 66 6F 72
	   20 70 6C 61 79
	   69 6E 67 21 20
	   47 6F 6F 64 62
	   79 65 20 00
 0000023C 00000000		addRes		DWORD	?
 00000240 00000000		divRes		DWORD	?
 00000244 00000000		mulRes		DWORD	?
 00000248 00000000		diRes		DWORD	?
 0000024C 00000000		remRes		DWORD	?
 00000250 00000000		subRes		DWORD	?



 00000000			.code
 00000000			main PROC

				; Introduction
 00000000  BA 00000021 R		mov		edx, OFFSET intro_1
 00000005  E8 00000000 E		call	WriteString
 0000000A  E8 00000000 E		call	CrLf
 0000000F  E8 00000000 E		call	CrLf
 00000014  BA 00000190 R		mov		edx, OFFSET EC_1
 00000019  E8 00000000 E		call	WriteString
 0000001E  E8 00000000 E		call	CrLf
 00000023  BA 000001C7 R		mov		edx, OFFSET EC_2
 00000028  E8 00000000 E		call	WriteString
 0000002D  E8 00000000 E		call	CrLf
 00000032  E8 00000000 E		call	CrLf
 00000037  BA 00000047 R		mov		edx, OFFSET intro_2
 0000003C  E8 00000000 E		call	WriteString
 00000041  E8 00000000 E		call	CrLf

				; Get the data
 00000046				beginProg:
 00000046  E8 00000000 E		call	CrLf
 0000004B  BA 000000CD R		mov		edx, OFFSET prompt_1
 00000050  E8 00000000 E		call	WriteString
 00000055  E8 00000000 E		call	ReadInt
 0000005A  A3 000001F7 R		mov		numOne, eax

 0000005F  BA 000000EE R		mov		edx, OFFSET prompt_2
 00000064  E8 00000000 E		call	WriteString
 00000069  EB 00			jmp		compareVal

 0000006B				compareVal:		; compare the values
 0000006B  E8 00000000 E		call	ReadInt
 00000070  39 05 000001F7 R		cmp		numOne, eax
 00000076  7C 02			jl		tryAgain
 00000078  7D 0C			jnl		continueProg

 0000007A				tryAgain:		; if less than, prompt for another number
 0000007A  BA 0000010D R		mov		edx, OFFSET prompt_3
 0000007F  E8 00000000 E		call	WriteString
 00000084  EB E5			jmp		compareVal

 00000086				continueProg:		; if not less than, good to go
 00000086  A3 000001FB R		mov		numTwo, eax
 0000008B  E8 00000000 E		call	CrLf
					

				; Calculate the required values
					
					; addition
 00000090  A1 000001F7 R		mov		eax, numOne
 00000095  8B 1D 000001FB R		mov		ebx, numTwo
 0000009B  03 C3			add		eax, ebx
 0000009D  A3 0000023C R		mov		addRes, eax

					;subtraction
 000000A2  A1 000001F7 R		mov		eax, numOne
 000000A7  8B 1D 000001FB R		mov		ebx, numTwo
 000000AD  2B C3			sub		eax, ebx
 000000AF  A3 00000250 R		mov		subRes, eax

					;multiplication
 000000B4  A1 000001F7 R		mov		eax, numOne
 000000B9  8B 1D 000001FB R		mov		ebx, numTwo
 000000BF  F7 E3			mul		ebx
 000000C1  A3 00000244 R		mov		mulRes, eax

					;division and remainder
 000000C6  A1 000001F7 R		mov		eax, numOne
 000000CB  99				cdq
 000000CC  8B 1D 000001FB R		mov		ebx, numTwo
 000000D2  F7 F3			div		ebx
 000000D4  A3 00000240 R		mov		divRes, eax
 000000D9  89 15 0000024C R		mov		remRes, edx
					


				; Display the results

					; addition
 000000DF  A1 000001F7 R		mov		eax, numOne
 000000E4  E8 00000000 E		call	WriteDec
 000000E9  A3 000001F7 R		mov		numOne, eax
 000000EE  BA 000001FF R		mov		edx, OFFSET addNum
 000000F3  E8 00000000 E		call	WriteString
 000000F8  A1 000001FB R		mov		eax, numTwo
 000000FD  E8 00000000 E		call	WriteDec
 00000102  A3 000001FB R		mov		numTwo, eax
 00000107  BA 00000207 R		mov		edx, OFFSET	eqNum
 0000010C  E8 00000000 E		call	WriteString
 00000111  A1 0000023C R		mov		eax, addRes
 00000116  E8 00000000 E		call	WriteDec
 0000011B  E8 00000000 E		call	CrLf

					; subtraction
 00000120  A1 000001F7 R		mov		eax, numOne
 00000125  E8 00000000 E		call	WriteDec
 0000012A  A3 000001F7 R		mov		numOne, eax
 0000012F  BA 00000203 R		mov		edx, OFFSET subNum
 00000134  E8 00000000 E		call	WriteString
 00000139  A1 000001FB R		mov		eax, numTwo
 0000013E  E8 00000000 E		call	WriteDec
 00000143  A3 000001FB R		mov		numTwo, eax
 00000148  BA 00000207 R		mov		edx, OFFSET eqNum
 0000014D  E8 00000000 E		call	WriteString
 00000152  A1 00000250 R		mov		eax, subRes
 00000157  E8 00000000 E		call	WriteDec
 0000015C  E8 00000000 E		call	CrLf

					; multiplication
 00000161  A1 000001F7 R		mov		eax, numOne
 00000166  E8 00000000 E		call	WriteDec
 0000016B  A3 000001F7 R		mov		numOne, eax
 00000170  BA 0000020F R		mov		edx, OFFSET mulNum
 00000175  E8 00000000 E		call	WriteString
 0000017A  A1 000001FB R		mov		eax, numTwo
 0000017F  E8 00000000 E		call	WriteDec
 00000184  A3 000001FB R		mov		numTwo, eax
 00000189  BA 00000207 R		mov		edx, OFFSET eqNum
 0000018E  E8 00000000 E		call	WriteString
 00000193  A1 00000244 R		mov		eax, mulRes
 00000198  E8 00000000 E		call	WriteDec
 0000019D  E8 00000000 E		call	CrLf

					; division and remainder
 000001A2  A1 000001F7 R		mov		eax, numOne
 000001A7  E8 00000000 E		call	WriteDec
 000001AC  A3 000001F7 R		mov		numOne, eax
 000001B1  BA 0000020B R		mov		edx, OFFSET divNum
 000001B6  E8 00000000 E		call	WriteString
 000001BB  A1 000001FB R		mov		eax, numTwo
 000001C0  E8 00000000 E		call	WriteDec
 000001C5  A3 000001FB R		mov		numTwo, eax
 000001CA  BA 00000207 R		mov		edx, OFFSET eqNum
 000001CF  E8 00000000 E		call	WriteString
 000001D4  A1 00000240 R		mov		eax, divRes
 000001D9  E8 00000000 E		call	WriteDec
 000001DE  BA 00000213 R		mov		edx, OFFSET remNum
 000001E3  E8 00000000 E		call	WriteString
 000001E8  A1 0000024C R		mov		eax, remRes
 000001ED  E8 00000000 E		call	WriteDec
 000001F2  E8 00000000 E		call	CrLf

				; Play again?
 000001F7  E8 00000000 E		call	crLf
 000001FC  BA 00000154 R		mov		edx, OFFSET prompt_4
 00000201  E8 00000000 E		call	WriteString
 00000206  E8 00000000 E		call	ReadInt
 0000020B  83 F8 01			cmp		eax, 1
 0000020E  0F 84 FFFFFE32		je		beginProg
 00000214  83 F8 00			cmp		eax, 0
 00000217  74 00			je		finishProg
					

				; Say goodbye
 00000219				finishProg:
 00000219  E8 00000000 E		call	crLf
 0000021E  BA 0000021F R		mov		edx, OFFSET goodbye
 00000223  E8 00000000 E		call	WriteString
 00000228  E8 00000000 E		call	crLf	
 0000022D  E8 00000000 E		call	crLf

					exit	; exit to operating system
 00000232  6A 00	   *	    push   +000000000h
 00000234  E8 00000000 E   *	    call   ExitProcess
 00000239			main ENDP


				END main
Microsoft (R) Macro Assembler Version 14.00.24210.0	    04/16/17 11:05:54
"Assignment 1     (CS271_prog1.asm			     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000254 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000239 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000239 Public STDCALL
  beginProg  . . . . . . . . . .	L Near	 00000046 _TEXT	
  compareVal . . . . . . . . . .	L Near	 0000006B _TEXT	
  tryAgain . . . . . . . . . . .	L Near	 0000007A _TEXT	
  continueProg . . . . . . . . .	L Near	 00000086 _TEXT	
  finishProg . . . . . . . . . .	L Near	 00000219 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
EC_1 . . . . . . . . . . . . . .	Byte	 00000190 _DATA	
EC_2 . . . . . . . . . . . . . .	Byte	 000001C7 _DATA	
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
addNum . . . . . . . . . . . . .	Byte	 000001FF _DATA	
addRes . . . . . . . . . . . . .	DWord	 0000023C _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
cyan . . . . . . . . . . . . . .	Number	 00000003h   
diRes  . . . . . . . . . . . . .	DWord	 00000248 _DATA	
divNum . . . . . . . . . . . . .	Byte	 0000020B _DATA	
divRes . . . . . . . . . . . . .	DWord	 00000240 _DATA	
eqNum  . . . . . . . . . . . . .	Byte	 00000207 _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
goodbye  . . . . . . . . . . . .	Byte	 0000021F _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
intro_1  . . . . . . . . . . . .	Byte	 00000021 _DATA	
intro_2  . . . . . . . . . . . .	Byte	 00000047 _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
mulNum . . . . . . . . . . . . .	Byte	 0000020F _DATA	
mulRes . . . . . . . . . . . . .	DWord	 00000244 _DATA	
numOne . . . . . . . . . . . . .	DWord	 000001F7 _DATA	
numTwo . . . . . . . . . . . . .	DWord	 000001FB _DATA	
prompt_1 . . . . . . . . . . . .	Byte	 000000CD _DATA	
prompt_2 . . . . . . . . . . . .	Byte	 000000EE _DATA	
prompt_3 . . . . . . . . . . . .	Byte	 0000010D _DATA	
prompt_4 . . . . . . . . . . . .	Byte	 00000154 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
remNum . . . . . . . . . . . . .	Byte	 00000213 _DATA	
remRes . . . . . . . . . . . . .	DWord	 0000024C _DATA	
subNum . . . . . . . . . . . . .	Byte	 00000203 _DATA	
subRes . . . . . . . . . . . . .	DWord	 00000250 _DATA	
userName . . . . . . . . . . . .	Byte	 00000000 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
